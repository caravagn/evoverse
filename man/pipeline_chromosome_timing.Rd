% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PIPELINE_CHR_TIMING.R
\name{pipeline_chromosome_timing}
\alias{pipeline_chromosome_timing}
\title{Pipeline to time aneuploidy.}
\usage{
pipeline_chromosome_timing(
  x,
  karyotypes = c("2:0", "2:1", "2:2"),
  min_muts = 150,
  description = "Chromosomal timing sample",
  N_max = 15000,
  ...
)
}
\arguments{
\item{x}{An object result from the evoverse data QC pipeline, which must contain results
from peak detection analysis to decide which CNA events can be timed. This object contains
also somatic mutations and CNA data; see function \code{pipeline_qc_copynumbercalls}.}

\item{karyotypes}{Karyotypes that should be timed, expressed as "Major:minor" notation. Default
are the following states \code{timeable = c('2:0', '2:1', '2:2')}. This list of karyotypes will
be checked against the list of peaks that PASS QC in \code{x}; only karyotypes that pass and are
listed will be used.}

\item{min_muts}{Karyotypes with less than \code{min_muts} mutations will not be analysed, even
if they PASS all the data metrics in \code{x} and are in \code{karyotypes}.}

\item{...}{Parameters passed to \code{mobster_fit} in package \code{mobster} to perform the
signal deconvolution. Each run is atteempted twice if it FAILS at first; the first run uses
parameters specified by this ellipsis, the second run uses the default parameters of \code{mobster_fit}.}
}
\value{

}
\description{
For a list of input mutations, CNA and purity data from a tumour sample,
MOBSTER fits are computed to determine proportions of mutations in each
aneuploidy state (copy state). Assignments and plots are returned, and
an automatic QC pipeline (supervised logistic classifier) is used to
flag which fits pass quality check. The trained set for the classifier
consists in n = 377 colorectal whole genome samples.
}
\examples{
# We use data released with the CNAqc package

print(x)

# We use x to run the pipeline
y = pipeline_chromosome_timing(x, auto_setup = 'FAST', N_max = 500)

print(y)
}
\seealso{
pipeline_qc_copynumbercalls
}
